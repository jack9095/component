apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.kuanquan.universalcomponents"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // TODO 每个模块都要添加下面的代码支持 ARouter 跨模块跳转
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file(keystoreConfig)
            storePassword storePasswordConfig
            keyAlias keyAliasConfig
            keyPassword keyPasswordConfig
        }

        release {
            storeFile file(keystoreConfig)
            storePassword storePasswordConfig
            keyAlias keyAliasConfig
            keyPassword keyPasswordConfig
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }

        release {
            // 混淆开启
            minifyEnabled true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            // 签名配置
            signingConfig signingConfigs.release

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true

            // 不显示日志
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_7
        sourceCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    rootProject.allModuleDependencies(dependencies)
    rootProject.common(dependencies)
    rootProject.jetPack(dependencies)
    rootProject.multiDex(dependencies)
    rootProject.bugly(dependencies)
    rootProject.netWork(dependencies)

    if (isNeedMineModule.toBoolean()) {
        implementation project(path: ':mine')
    }
    if (isNeedHomeModule.toBoolean()) {
        implementation project(path: ':home')
    }
    implementation project(path: ':baselibrary')

}
